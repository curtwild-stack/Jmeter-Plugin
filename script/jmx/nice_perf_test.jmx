<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="Assertion Results" enabled="true">
        <boolProp name="ResultCollector.error_logging">true</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">assert.jtl</stringProp>
      </ResultCollector>
      <hashTree/>
      <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="jp@gc - PerfMon Metrics Collector" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">perfmon.jtl</stringProp>
        <longProp name="interval_grouping">1000</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
        <stringProp name="start_offset"></stringProp>
        <stringProp name="end_offset"></stringProp>
        <boolProp name="include_checkbox_state">false</boolProp>
        <boolProp name="exclude_checkbox_state">false</boolProp>
        <collectionProp name="metricConnections">
          <collectionProp name="767445089">
            <stringProp name="-485716467">172.16.100.100</stringProp>
            <stringProp name="1600768">4444</stringProp>
            <stringProp name="66952">CPU</stringProp>
            <stringProp name="0"></stringProp>
          </collectionProp>
        </collectionProp>
      </kg.apc.jmeter.perfmon.PerfMonCollector>
      <hashTree/>
      <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
        <stringProp name="CounterConfig.start">1</stringProp>
        <stringProp name="CounterConfig.end">999999</stringProp>
        <stringProp name="CounterConfig.incr">1</stringProp>
        <stringProp name="CounterConfig.name">count6</stringProp>
        <stringProp name="CounterConfig.format">000000</stringProp>
        <boolProp name="CounterConfig.per_user">false</boolProp>
      </CounterConfig>
      <hashTree/>
      <com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup guiclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroupGui" testclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup" testname="bzm - Concurrency Thread Group" enabled="true">
        <elementProp name="ThreadGroup.main_controller" elementType="com.blazemeter.jmeter.control.VirtualUserController"/>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="TargetLevel">${__P(TARGET_USERS,10)}</stringProp>
        <stringProp name="RampUp">${__P(RAMPUP_SECONDS,10)}</stringProp>
        <stringProp name="Steps">${__P(RAMPUP_STEPS_COUNT,0)}</stringProp>
        <stringProp name="Hold">${__P(HOLD_TARGET_SECONDS,60)}</stringProp>
        <stringProp name="LogFilename"></stringProp>
        <stringProp name="Iterations"></stringProp>
        <stringProp name="Unit">S</stringProp>
      </com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup>
      <hashTree>
        <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="script">// TID 생성. datetime(17) + threadNum(4) + seq(6)
datetime = new Date().format(&quot;yyyyMMddhhmmssSSS&quot;)
threadNum = &quot;${__threadNum()}&quot;.padLeft(4, &quot;0&quot;)

tid = datetime + threadNum + vars.get(&quot;count6&quot;)

vars.put(&quot;tid&quot;, tid) ;
</stringProp>
          <stringProp name="scriptLanguage">groovy</stringProp>
        </JSR223PreProcessor>
        <hashTree/>
        <ConstantThroughputTimer guiclass="TestBeanGUI" testclass="ConstantThroughputTimer" testname="Constant Throughput Timer (Think time)" enabled="true">
          <intProp name="calcMode">0</intProp>
          <stringProp name="throughput">${__groovy(props.get(&quot;TPS_PER_USER&quot;\, &quot;1&quot;).toInteger() * 60)}</stringProp>
        </ConstantThroughputTimer>
        <hashTree/>
        <SwitchController guiclass="SwitchControllerGui" testclass="SwitchController" testname="Switch Controller (부하비율 설정)" enabled="true">
          <stringProp name="TestPlan.comments">매핑:바이패스 비윯 7:3</stringProp>
          <stringProp name="SwitchController.value">${__groovy(new Random().nextInt(10) &lt; 7 ? 0 : 1)}</stringProp>
        </SwitchController>
        <hashTree>
          <com.inzent.igate.jmeter.sampler.InzentTCPSampler guiclass="com.inzent.igate.jmeter.control.gui.InzentTCPSamplerGui" testclass="com.inzent.igate.jmeter.sampler.InzentTCPSampler" testname="TCP(Inzent) Sampler (매핑거래)" enabled="true">
            <stringProp name="InzentTCPSampler.server">localhost</stringProp>
            <boolProp name="InzentTCPSampler.reUseConnection">true</boolProp>
            <stringProp name="InzentTCPSampler.port">20000</stringProp>
            <boolProp name="InzentTCPSampler.nodelay">false</boolProp>
            <boolProp name="InzentTCPSampler.noresponse">true</boolProp>
            <stringProp name="InzentTCPSampler.timeout">10000</stringProp>
            <stringProp name="InzentTCPSampler.ctimeout">3000</stringProp>
            <stringProp name="InzentTCPSampler.request">0027${tid}</stringProp>
            <boolProp name="InzentTCPSampler.closeConnection">false</boolProp>
            <stringProp name="InzentTCPSampler.packetMode">L</stringProp>
            <stringProp name="InzentTCPSampler.packetHeaderEncode">D</stringProp>
            <stringProp name="InzentTCPSampler.packetHeaderOffset">0</stringProp>
            <stringProp name="InzentTCPSampler.packetHeaderLength">4</stringProp>
            <stringProp name="InzentTCPSampler.packetHeaderCompensation">0</stringProp>
          </com.inzent.igate.jmeter.sampler.InzentTCPSampler>
          <hashTree/>
          <com.inzent.igate.jmeter.sampler.InzentTCPSampler guiclass="com.inzent.igate.jmeter.control.gui.InzentTCPSamplerGui" testclass="com.inzent.igate.jmeter.sampler.InzentTCPSampler" testname="TCP(Inzent) Sampler (바이패스)" enabled="true">
            <stringProp name="InzentTCPSampler.server">localhost</stringProp>
            <boolProp name="InzentTCPSampler.reUseConnection">true</boolProp>
            <stringProp name="InzentTCPSampler.port">20000</stringProp>
            <boolProp name="InzentTCPSampler.nodelay">false</boolProp>
            <boolProp name="InzentTCPSampler.noresponse">true</boolProp>
            <stringProp name="InzentTCPSampler.timeout">10000</stringProp>
            <stringProp name="InzentTCPSampler.ctimeout">3000</stringProp>
            <stringProp name="InzentTCPSampler.request">0027${tid}</stringProp>
            <boolProp name="InzentTCPSampler.closeConnection">false</boolProp>
            <stringProp name="InzentTCPSampler.packetMode">L</stringProp>
            <stringProp name="InzentTCPSampler.packetHeaderEncode">D</stringProp>
            <stringProp name="InzentTCPSampler.packetHeaderOffset">0</stringProp>
            <stringProp name="InzentTCPSampler.packetHeaderLength">4</stringProp>
            <stringProp name="InzentTCPSampler.packetHeaderCompensation">0</stringProp>
          </com.inzent.igate.jmeter.sampler.InzentTCPSampler>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
